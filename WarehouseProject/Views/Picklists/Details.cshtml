@{
  Layout = "_Layout";
}

@model WarehouseProject.Models.Picklist
@using WarehouseProject.Models

<h2>Picklist Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.OrderNumber): @Html.DisplayFor(model => model.OrderNumber)<h3>
<h3>@Html.DisplayNameFor(model => model.OrderFor): @Html.DisplayFor(model => model.OrderFor)</h3>
<h3>@Html.DisplayNameFor(model => model.Priority): @Html.DisplayFor(model => model.Priority)</h3>
<h3>@Html.DisplayNameFor(model => model.Carrier): @Html.DisplayFor(model => model.Carrier)</h3>
<h3>@Html.DisplayNameFor(model => model.OrderDate): @Html.DisplayFor(model => model.OrderDate)</h3>
<h3>@Html.DisplayNameFor(model => model.ShipBy): @Html.DisplayFor(model => model.ShipBy)</h3>
  
@if (@Model.JoinPicklistProductType.Count == 0)
{
  <h3>No product types have been added to this picklist yet!</h3>
} 
else
{
  <h4>picklist details</h4>
  <ul>
    @foreach(PicklistProductType join in Model.JoinPicklistProductType)
    {
      <li>Product Type: @join.ProductType.Name</li>
      @using (Html.BeginForm("DeleteJoin", "Picklists"))
      {
        @Html.Hidden("joinId", @join.PicklistProductTypeId)
        <input type="submit" value="Delete"/>
      }
    }
  </ul>
}

<p>@Html.ActionLink("Update Picklist", "Edit", new { id = Model.PicklistId })</p>
<p>@Html.ActionLink("Remove Picklist", "Delete", new { id = Model.PicklistId })</p>
<p>@Html.ActionLink("Add a Product Type to this Picklist", "AddProductType", new { id = Model.PicklistId })</p>
<p>@Html.ActionLink("Back to list", "Index")</p>