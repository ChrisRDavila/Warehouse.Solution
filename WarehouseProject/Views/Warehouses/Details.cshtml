@{
  Layout = "_Layout";
}

@using WarehouseProject.Models
@model WarehouseProject.Models.Warehouse

<h2>Warehouse Details</h2>
<hr />
<table class="table table-bordered">
  <tr>
    <th>@Html.DisplayNameFor(model => model.Branch)<td> @Html.DisplayFor(model => model.Branch)</td></th>
  </tr>
  <tr> 
    <th>@Html.DisplayNameFor(model => model.Address)<td>@Html.DisplayFor(model => model.Address)</td></th>
  </tr> 
  <tr> 
    <th>@Html.DisplayNameFor(model => model.City)<td> @Html.DisplayFor(model => model.City)</td></th>
  </tr>
  <tr>  
    <th>@Html.DisplayNameFor(model => model.State)<td> @Html.DisplayFor(model => model.State)</td></th>
  </tr>
  <tr>  
    <th>@Html.DisplayNameFor(model => model.Zipcode)<td> @Html.DisplayFor(model => model.Zipcode)</td></th>
  </tr>
  <tr>  
    <th>@Html.DisplayNameFor(model => model.Notes)<td> @Html.DisplayFor(model => model.Notes)</td></th>
  </tr>  
</table>    


@if(@Model.JoinWarehouseProductType.Count == 0)
{
  <p>This Warehouse has not been assigned any product types</p>
}
else
{
  <h4>product types in this warehouse</h4>
  <ul>
    @foreach(WarehouseProductType join in Model.JoinWarehouseProductType)
    {
      <li>Product Types: @join.ProductType.Name</li>
      @using (Html.BeginForm("DeleteJoin", "Warehouses"))
      {
        @Html.Hidden("joinId", @join.WarehouseProductTypeId)
        <input type="submit" value="Delete"/>
      }
    }
  </ul>
}
<p>@Html.ActionLink("Back to list", "Index")</p>
<p>@Html.ActionLink("Edit this Warehouse", "Edit", new { id = Model.WarehouseId })</p>
<p>@Html.ActionLink("Add a product type to this warehouse", "AddProductType", new { id = Model.WarehouseId })</p>
<p>@Html.ActionLink("Delete Warehouse", "Delete", new { id = Model.WarehouseId })</p>