@{
  Layout = "_Layout";
}

@using WarehouseProject.Models
@model WarehouseProject.Models.Warehouse

<h2>Warehouse Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Branch): @Html.DisplayFor(model => model.Branch)</h3>
<h3>@Html.DisplayNameFor(model => model.Address): @Html.DisplayFor(model => model.Address)</h3>
<h3>@Html.DisplayNameFor(model => model.City): @Html.DisplayFor(model => model.City)</h3>
<h3>@Html.DisplayNameFor(model => model.State): @Html.DisplayFor(model => model.State)</h3>
<h3>@Html.DisplayNameFor(model => model.Zipcode): @Html.DisplayFor(model => model.Zipcode)</h3>
<h3>@Html.DisplayNameFor(model => model.Notes): @Html.DisplayFor(model => model.Notes)</h3>


@if(@Model.JoinWarehouseProductType.Count == 0)
{
  <p>This Warehouse has not been assigned any product types</p>
}
else
{
  <h4>product types in this warehouse</h4>
  <ul>
    @foreach(WarehouseProductType join in Model.JoinWarehouseProductType)
    {
      <li>Product Types: @join.ProductType.Name</li>
      @using (Html.BeginForm("DeleteJoin", "Warehouses"))
      {
        @Html.Hidden("joinId", @join.WarehouseProductTypeId)
        <input type="submit" value="Delete"/>
      }
    }
  </ul>
}

<p>@Html.ActionLink("Back to list", "Index")</p>
<p>@Html.ActionLink("Edit this Warehouse", "Edit", new { id = Model.WarehouseId })</p>
<p>@Html.ActionLink("Add a product type to this warehouse", "AddProductType", new { id = Model.WarehouseId })</p>
<p>@Html.ActionLink("Delete Warehouse", "Delete", new { id = Model.WarehouseId })</p>