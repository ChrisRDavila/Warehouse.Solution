@{
  Layout = "_Layout";
}

@using WarehouseProject.Models
@model WarehouseProject.Models.Product

<h2>Product Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>
<h3>@Html.DisplayNameFor(model => model.Type): @Html.DisplayFor(model => model.Type)</h3>
<h3>@Html.DisplayNameFor(model => model.Description): @Html.DisplayFor(model => model.Description)</h3>
<h3>@Html.DisplayNameFor(model => model.Barcode): @Html.DisplayFor(model => model.Barcode)</h3>
<h3>@Html.DisplayNameFor(model => model.Quantity): @Html.DisplayFor(model => model.Quantity)</h3>
<h3>@Html.DisplayNameFor(model => model.Weight): @Html.DisplayFor(model => model.Weight)</h3>
<h3>@Html.DisplayNameFor(model => model.Dimensions): @Html.DisplayFor(model => model.Dimensions)</h3>
<h3>@Html.DisplayNameFor(model => model.Picked): @Html.DisplayFor(model => model.Picked)</h3>



@if(@Model.JoinEntities.Count == 0)
{
  <p>This product has not been assigned a warehouse</p>
}
else
{
  <h4>product details</h4>
  <ul>
    @foreach(WarehouseProduct join in Model.JoinEntities)
    {
      <li>Warehouse: @join.Warehouse.Building</li>
      @using (Html.BeginForm("DeleteJoin", "Products"))
      {
        @Html.Hidden("joinId", @join.WarehouseProductId)
        <input type="submit" value="Delete"/>
      }
    }
  </ul>
}

<p>@Html.ActionLink("Back to list", "Index")</p>
<p>@Html.ActionLink("Edit this Product", "Edit", new { id = Model.ProductId })</p>
<p>@Html.ActionLink("Add a warehouse to this product", "AddWarehouse", new { id = Model.ProductId })</p>
<p>@Html.ActionLink("Delete Product", "Delete", new { id = Model.ProductId })</p>